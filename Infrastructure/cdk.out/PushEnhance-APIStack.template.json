{
 "Resources": {
  "Base93336DB5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "subscriptions"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/Base/Resource"
   }
  },
  "serverlessExpressFunctionServiceRoleAD1C9A59": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/serverlessExpressFunction/ServiceRole/Resource"
   }
  },
  "serverlessExpressFunctionServiceRoleDefaultPolicyE86D2FF3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:Get*",
        "dynamodb:PutItem",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Base93336DB5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "serverlessExpressFunctionServiceRoleDefaultPolicyE86D2FF3",
    "Roles": [
     {
      "Ref": "serverlessExpressFunctionServiceRoleAD1C9A59"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/serverlessExpressFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "serverlessExpressFunction0F23EAFF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "68bb9967940c41a886f986966cb3c080e63fd06bb7667adc59065e3256c328e5.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "serverlessExpressFunctionServiceRoleAD1C9A59",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": "subscriptions",
      "DYNAMODB_SECRET_ACCESS_KEY": "",
      "DYNAMODB_ACCESS_KEY_ID": ""
     }
    },
    "FunctionName": "serverlessExpressFunction",
    "Handler": "index.handler",
    "Runtime": "nodejs16.x",
    "Timeout": 300
   },
   "DependsOn": [
    "serverlessExpressFunctionServiceRoleDefaultPolicyE86D2FF3",
    "serverlessExpressFunctionServiceRoleAD1C9A59"
   ],
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/serverlessExpressFunction/Resource",
    "aws:asset:path": "asset.68bb9967940c41a886f986966cb3c080e63fd06bb7667adc59065e3256c328e5",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "httpApiC9FAD708": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "GET",
      "HEAD",
      "OPTIONS",
      "POST"
     ],
     "AllowOrigins": [
      "*"
     ],
     "ExposeHeaders": [
      "*"
     ]
    },
    "Name": "httpApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/httpApi/Resource"
   }
  },
  "httpApiDefaultStage49B103A5": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "httpApiC9FAD708"
    },
    "StageName": "$default",
    "AutoDeploy": true
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/httpApi/DefaultStage/Resource"
   }
  },
  "httpApiANYLambdaProxyIntegration6BFFCAD7": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "httpApiC9FAD708"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "serverlessExpressFunction0F23EAFF",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/httpApi/ANY--/LambdaProxyIntegration/Resource"
   }
  },
  "httpApiANYLambdaProxyIntegrationPermission4A5C53B8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "serverlessExpressFunction0F23EAFF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "httpApiC9FAD708"
       },
       "/*/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/httpApi/ANY--/LambdaProxyIntegration-Permission"
   }
  },
  "httpApiANYB8D1566D": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "httpApiC9FAD708"
    },
    "RouteKey": "ANY /",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "httpApiANYLambdaProxyIntegration6BFFCAD7"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/httpApi/ANY--/Resource"
   }
  },
  "httpApiANYproxyLambdaProxyIntegrationPermission0A107F0B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "serverlessExpressFunction0F23EAFF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "httpApiC9FAD708"
       },
       "/*/*/{proxy+}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/httpApi/ANY--{proxy+}/LambdaProxyIntegration-Permission"
   }
  },
  "httpApiANYproxy8B9839FD": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "httpApiC9FAD708"
    },
    "RouteKey": "ANY /{proxy+}",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "httpApiANYLambdaProxyIntegration6BFFCAD7"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/httpApi/ANY--{proxy+}/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02QQW+DMAyFfwv34EI3VdptbaVpO61iu1cmyWgKJIg4rVDEf18SWonTe3ae7U/Zwu4VfJHh3eZctHmnavA/hLxloXX2YtLYGxGav1h3kh3/dDIz67CvBYL/cJqTMjo+rf1Jjr2yNlQzU9iDr8wyn/RkOsWnlEtuZvbljNZKsrCPEmo4ON5KOqCVDAfVIMk7Trct+DC2H1ScDqhN2vqlSTYjPq9XxpGcZ1ZJa9zIJUtLY1rpJga+HQ2OUvQZCf5otFCUmIscu+GCUGTvj8/ZRF2DPBL+k2iIPFEXoOgSQnIrtoCkjZBwtZtbuYPyDcrsapXKR6dJ9RKqRf8BvJD8v5gBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "PushEnhance-APIStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "Apiversionendpoint": {
   "Value": {
    "Fn::GetAtt": [
     "httpApiC9FAD708",
     "ApiEndpoint"
    ]
   }
  },
  "env": {
   "Value": ""
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}